version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    platform: linux/amd64
    restart: unless-stopped
    environment:
      - ENV=development
      - API_SECRET_KEY=${API_SECRET_KEY:-your-secret-key-here}
      - DATABASE_URL=${DATABASE_URL:-postgresql://user:password@db:5432/fedfina}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ELEVENLABS_WEBHOOK_SECRET=${ELEVENLABS_WEBHOOK_SECRET}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME:-dev@fedfina.com}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-dev-password}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL:-noreply@fedfina.com}
      - SMTP_USE_TLS=${SMTP_USE_TLS:-true}
    depends_on:
      - db
      - minio
    volumes:
      - ./backend:/app
      - /Volumes/ssd/models:/models:ro
    networks:
      - fedfina-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    platform: linux/amd64
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENV=development
    depends_on:
      - backend
    networks:
      - fedfina-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    platform: linux/amd64
    restart: unless-stopped
    environment:
      - POSTGRES_DB=fedfina
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - fedfina-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d fedfina"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO object storage
  minio:
    image: minio/minio:latest
    platform: linux/amd64
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - fedfina-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    platform: linux/amd64
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fedfina-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

networks:
  fedfina-network:
    driver: bridge 