name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: docker4zerocool/fedfina-backend
  FRONTEND_IMAGE: docker4zerocool/fedfina-frontend
  KUBE_NAMESPACE: fedfina

jobs:
  test:
    name: Test
    if: false
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        
    - name: Run backend tests
      run: |
        cd backend
        python -m pytest tests/ -v
      env:
        ENV: test
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --watchAll=false --coverage
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE }}
          ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        
    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  deploy-staging:
    name: Deploy to Staging (GitOps)
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Update image tags in staging manifests (GitOps)
      run: |
        sed -i 's|docker.io/docker4zerocool/fedfina-backend:latest|docker.io/docker4zerocool/fedfina-backend:${{ github.sha }}|g' deploy/deployment-staging.yaml
        sed -i 's|docker.io/docker4zerocool/fedfina-frontend:latest|docker.io/docker4zerocool/fedfina-frontend:${{ github.sha }}|g' deploy/deployment-staging.yaml
    
    - name: Commit and push updated staging manifests
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "GitOps(staging): update image tags to ${{ github.sha }}"
        branch: develop
        file_pattern: 'deploy/deployment-staging.yaml'

  deploy-production:
    name: Deploy to Production (GitOps)
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Update image tags in production manifests (GitOps)
      run: |
        sed -i 's|docker.io/docker4zerocool/fedfina-backend:latest|docker.io/docker4zerocool/fedfina-backend:${{ github.sha }}|g' deploy/deployment-v2.yaml
        sed -i 's|docker.io/docker4zerocool/fedfina-frontend:latest|docker.io/docker4zerocool/fedfina-frontend:${{ github.sha }}|g' deploy/deployment-v2.yaml

    - name: Commit and push updated production manifests
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "GitOps(prod): update image tags to ${{ github.sha }}"
        branch: main
        file_pattern: 'deploy/deployment-v2.yaml'
